diff --git a/app/build.gradle.kts b/app/build.gradle.kts
index 543a41409..1320a6ba1 100644
--- a/app/build.gradle.kts
+++ b/app/build.gradle.kts
@@ -21,6 +21,8 @@ import extension.allFeaturesImpl
 import extension.allLibrariesImpl
 import extension.allServicesImpl
 import org.jetbrains.kotlin.cli.common.toBooleanLenient
+import java.time.LocalDateTime
+import java.time.Duration;
 
 plugins {
     id("io.element.android-compose-application")
@@ -45,11 +47,6 @@ android {
         versionCode = Versions.versionCode
         versionName = Versions.versionName
 
-        // Keep abiFilter for the universalApk
-        ndk {
-            abiFilters += listOf("armeabi-v7a", "x86", "arm64-v8a", "x86_64")
-        }
-
         // Ref: https://developer.android.com/studio/build/configure-apk-splits.html#configure-abi-split
         splits {
             // Configures multiple APKs based on ABI.
@@ -63,7 +60,7 @@ android {
                 // Specifies a list of ABIs that Gradle should create APKs for.
                 include("armeabi-v7a", "x86", "arm64-v8a", "x86_64")
                 // Generate a universal APK that includes all ABIs, so user who installs from CI tool can use this one by default.
-                isUniversalApk = true
+                isUniversalApk = false
             }
         }
     }
@@ -95,7 +92,6 @@ android {
 
         named("release") {
             resValue("string", "app_name", "Element X")
-            signingConfig = signingConfigs.getByName("debug")
 
             postprocessing {
                 isRemoveUnusedCode = true
@@ -156,6 +152,10 @@ androidComponents {
         "x86_64" to 4,
     )
 
+    val d1 = LocalDateTime.of(2021, 12, 31, 23, 59);
+    val d2 = LocalDateTime.now()
+    val minutes = Duration.between(d1, d2).getSeconds() / 60
+    val DateVersionCode = (2112312359 + minutes).toInt()
     onVariants { variant ->
         // Assigns a different version code for each output APK
         // other than the universal APK.
@@ -166,7 +166,7 @@ androidComponents {
             val abiCode = abiVersionCodes[name] ?: 0
             // Assigns the new version code to output.versionCode, which changes the version code
             // for only the output APK, not for the variant itself.
-            output.versionCode.set((output.versionCode.get() ?: 0) * 10 + abiCode)
+            output.versionCode.set(DateVersionCode + abiCode)
         }
     }
 }
