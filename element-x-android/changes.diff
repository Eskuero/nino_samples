diff --git a/app/build.gradle.kts b/app/build.gradle.kts
index 6ecfe66fb..28eafb76a 100644
--- a/app/build.gradle.kts
+++ b/app/build.gradle.kts
@@ -24,6 +24,8 @@ import extension.gitBranchName
 import extension.gitRevision
 import extension.koverDependencies
 import extension.setupKover
+import java.time.LocalDateTime
+import java.time.Duration;
 
 plugins {
     id("io.element.android-compose-application")
@@ -50,11 +52,6 @@ android {
         versionCode = Versions.versionCode
         versionName = Versions.versionName
 
-        // Keep abiFilter for the universalApk
-        ndk {
-            abiFilters += listOf("armeabi-v7a", "x86", "arm64-v8a", "x86_64")
-        }
-
         buildConfigField("String", "GIT_REVISION", "\"${gitRevision()}\"")
         buildConfigField("String", "GIT_BRANCH_NAME", "\"${gitBranchName()}\"")
 
@@ -71,7 +68,7 @@ android {
                 // Specifies a list of ABIs that Gradle should create APKs for.
                 include("armeabi-v7a", "x86", "arm64-v8a", "x86_64")
                 // Generate a universal APK that includes all ABIs, so user who installs from CI tool can use this one by default.
-                isUniversalApk = true
+                isUniversalApk = false
             }
         }
     }
@@ -98,12 +95,10 @@ android {
         getByName("debug") {
             resValue("string", "app_name", "Element X dbg")
             applicationIdSuffix = ".debug"
-            signingConfig = signingConfigs.getByName("debug")
         }
 
         getByName("release") {
             resValue("string", "app_name", "Element X")
-            signingConfig = signingConfigs.getByName("debug")
 
             postprocessing {
                 isRemoveUnusedCode = true
@@ -178,6 +173,10 @@ androidComponents {
         "x86_64" to 4,
     )
 
+    val d1 = LocalDateTime.of(2021, 12, 31, 23, 59);
+    val d2 = LocalDateTime.now()
+    val minutes = Duration.between(d1, d2).getSeconds() / 60
+    val DateVersionCode = (2112312359 + minutes).toInt()
     onVariants { variant ->
         // Assigns a different version code for each output APK
         // other than the universal APK.
@@ -188,7 +187,7 @@ androidComponents {
             val abiCode = abiVersionCodes[name] ?: 0
             // Assigns the new version code to output.versionCode, which changes the version code
             // for only the output APK, not for the variant itself.
-            output.versionCode.set((output.versionCode.orNull ?: 0) * 10 + abiCode)
+            output.versionCode.set(DateVersionCode + abiCode)
         }
     }
 }
