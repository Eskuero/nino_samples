diff --git a/vector/build.gradle b/vector/build.gradle
index f6ba5d6e2..7c26b09db 100644
--- a/vector/build.gradle
+++ b/vector/build.gradle
@@ -135,11 +135,6 @@ android {
 
         testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
 
-        // Keep abiFilter for the universalApk
-        ndk {
-            abiFilters "armeabi-v7a", "x86", 'arm64-v8a', 'x86_64'
-        }
-
         // Ref: https://developer.android.com/studio/build/configure-apk-splits.html
         splits {
             // Configures multiple APKs based on ABI.
@@ -157,20 +152,16 @@ android {
                 include "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
 
                 // Generate a universal APK that includes all ABIs, so user who install from CI tool can use this one by default.
-                universalApk true
+                universalApk false
             }
         }
 
-        applicationVariants.all { variant ->
-            // assign different version code for each output
-            def baseVariantVersion = variant.versionCode * 10
-            variant.outputs.each { output ->
-                def baseAbiVersionCode = project.ext.abiVersionCodes.get(output.getFilter(OutputFile.ABI))
-                // Known limitation: it does not modify the value in the BuildConfig.java generated file
-                // See https://issuetracker.google.com/issues/171133218
-                output.versionCodeOverride = baseVariantVersion + baseAbiVersionCode
-                print "ABI " + output.getFilter(OutputFile.ABI) + " \t-> VersionCode = " + output.versionCodeOverride + "\n"
-            }
+        def DateVersionCode = Integer.parseInt(new Date().format("yyMMddHHmm"))
+        project.ext.versionCodes = ['armeabi-v7a': 1, 'arm64-v8a': 2, 'x86': 3, 'x86_64': 4]
+        android.applicationVariants.all { variant ->
+                variant.outputs.all { output ->
+                        output.versionCodeOverride = project.ext.versionCodes.get(output.getFilter(com.android.build.OutputFile.ABI), 0) + DateVersionCode
+                }
         }
 
         // The following argument makes the Android Test Orchestrator run its
