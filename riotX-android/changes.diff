diff --git a/gradle.properties b/gradle.properties
index 99fd9d64f..20059b79f 100644
--- a/gradle.properties
+++ b/gradle.properties
@@ -9,6 +9,7 @@
 android.enableJetifier=true
 android.useAndroidX=true
 org.gradle.jvmargs=-Xmx2048m
+android.jetifier.blacklist = kotlin-compiler-embeddable-.*\\.jar
 # When configured, Gradle will run in incubating parallel mode.
 # This option should only be used with decoupled projects. More details, visit
 # http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
diff --git a/vector/build.gradle b/vector/build.gradle
index 0c7985b45..338fb9f0a 100644
--- a/vector/build.gradle
+++ b/vector/build.gradle
@@ -139,11 +139,6 @@ android {
 
         testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
 
-        // Keep abiFilter for the universalApk
-        ndk {
-            abiFilters "armeabi-v7a", "x86", 'arm64-v8a', 'x86_64'
-        }
-
         // Ref: https://developer.android.com/studio/build/configure-apk-splits.html
         splits {
             // Configures multiple APKs based on ABI.
@@ -161,16 +156,16 @@ android {
                 include "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
 
                 // Generate a universal APK that includes all ABIs, so user who install from CI tool can use this one by default.
-                universalApk true
+                universalApk false
             }
         }
 
-        applicationVariants.all { variant ->
-            variant.outputs.each { output ->
-                def baseAbiVersionCode = project.ext.abiVersionCodes.get(output.getFilter(OutputFile.ABI))
-                // Known limitation: it does not modify the value in the BuildConfig.java generated file
-                output.versionCodeOverride = variant.versionCode * 10 + baseAbiVersionCode
-            }
+        def DateVersionCode = Integer.parseInt(new Date().format("yyMMddHHmm"))
+        project.ext.versionCodes = ['armeabi-v7a': 1, 'arm64-v8a': 2, 'x86': 3, 'x86_64': 4]
+        android.applicationVariants.all { variant ->
+        variant.outputs.all { output ->
+                output.versionCodeOverride = project.ext.versionCodes.get(output.getFilter(com.android.build.OutputFile.ABI), 0) + DateVersionCode
+                }
         }
     }
 
