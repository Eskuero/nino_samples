diff --git a/app/build.gradle.kts b/app/build.gradle.kts
index 4ef3d2aa..164f2e23 100644
--- a/app/build.gradle.kts
+++ b/app/build.gradle.kts
@@ -1,5 +1,7 @@
 import com.mikepenz.aboutlibraries.plugin.DuplicateMode
 import com.mikepenz.aboutlibraries.plugin.DuplicateRule
+import java.time.LocalDateTime
+import java.time.Duration
 
 plugins {
     id("convention.android-app")
@@ -9,15 +11,6 @@ plugins {
     alias(libs.plugins.aboutLibraries)
 }
 
-bundletool {
-    signingConfig {
-        storeFile.set(rootProject.layout.projectDirectory.file("keystore.jks"))
-        storePassword.set(providers.environmentVariable("SIGNING_STORE_PASSWORD"))
-        keyAlias.set(providers.environmentVariable("SIGNING_KEY_ALIAS"))
-        keyPassword.set(providers.environmentVariable("SIGNING_KEY_PASSWORD"))
-    }
-}
-
 android {
     namespace = "xyz.malkki.neostumbler"
     compileSdk = 36
@@ -86,8 +79,6 @@ android {
         getByName("debug") { applicationIdSuffix = ".dev" }
 
         getByName("release") {
-            signingConfig = signingConfigs.getByName("release")
-
             isDebuggable = false
 
             isMinifyEnabled = true
@@ -99,7 +90,7 @@ android {
                 "altbeacon.pro",
             )
 
-            ndk { abiFilters += listOf("armeabi-v7a", "arm64-v8a") }
+            ndk { abiFilters += listOf("arm64-v8a") }
         }
     }
 
@@ -185,9 +176,9 @@ android {
             isEnable = project.hasProperty("enableAbiSplit")
 
             reset()
-            include("armeabi-v7a", "arm64-v8a")
+            include("arm64-v8a")
 
-            isUniversalApk = true
+            isUniversalApk = false
         }
     }
 
@@ -196,6 +187,17 @@ android {
 
         lintConfig = projectDir.resolve("lint.xml")
     }
+    val d1 = LocalDateTime.of(2021, 12, 31, 23, 59);
+    val d2 = LocalDateTime.now()
+    val minutes = Duration.between(d1, d2).getSeconds() / 60
+    val DateVersionCode = (2112312359 + minutes).toInt()
+    androidComponents {
+        onVariants { variant ->
+            variant.outputs.forEach { output ->
+                output.versionCode.set(DateVersionCode)
+             }
+        }
+    }
 }
 
 tasks.register<Copy>("copyPrivacyPolicy") {
